var documenterSearchIndex = {"docs":
[{"location":"#LinearEphemeris.jl","page":"Home","title":"LinearEphemeris.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LinearEphemeris.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Package for fitting linear ephemeris to a series of transit times (T0s) of an exoplanet.  ","category":"page"},{"location":"#.-Introduction","page":"Home","title":"1. Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for linear ephemerides fit of exoplanet transit times.   It uses the Weighted Least Square (WLS) fit based on the Numerical Recipes.   It can evaluate the errors on the reference time (Tref, that is the intercept) and on the period (Pref, that is the slope) based on formal error of the WLS or with a bootstrap approach.   It returns to the standard output a summary of the fit (with statistics) and each transit time (T0) with own corresponding epoch (or transit number), expected transit time (Tlin) from the linear ephem. and O-C (Observed - Calculated, where O == T0 and C == Tlin), and the source (that is the telescope used to observe that transit).  ","category":"page"},{"location":"#.-Install","page":"Home","title":"2. Install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.clone(\"https://github.com/lucaborsato/LinearEphemeris.jl.git\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"or  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.clone(\"git@github.com:lucaborsato/LinearEphemeris.jl.git\")","category":"page"},{"location":"#.-Example","page":"Home","title":"3. Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Create/Read list of T0s = [1234.9034, ..., 16789.3980], errors err_T0s = [0.00034, ..., 0.00045].   Define input Tref, Pref.   Using default parameters, run as:  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using LinearEphemeris\nfull_linear_ephemeris_analysis(\n    T0s,\n    err_T0s;\n    Tref_in = Tref,\n    Pref_in = Pref\n)","category":"page"},{"location":"","page":"Home","title":"Home","text":"It will output to screen a summary of the fit with statistics, bootstrap error analysis, and it will open a plot gui.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can provide also a list of `sources = [\"TESS\", ..., \"K2\"] and it will plot each telescope/source with a different color.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The following is a call of the function with the allowed parameters and default values:  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"full_linear_ephemeris_analysis(\n        T0s,\n        err_T0s;\n        Tref_in = nothing,\n        Pref_in = nothing,\n        tscale = nothing,\n        sources = nothing,\n        bootstrap = true,\n        nboot = nothing,\n        return_distribution = true,\n        do_plot = true,\n        show_gui = true,\n        plot_file = nothing,\n        seed = 42,\n    )","category":"page"},{"location":"","page":"Home","title":"Home","text":"where:   tscale is a parameter to be subtracted to the x-axis, only for plot.   nboot is the number of bootstrap iterations, if nothing it will computed automatically as n (log(n))^2, with n the number of T0s.   do_plot a keyword to do the plot or not.   plot_file is the file name (with complete path) of the output of the plot, if do_plot = false it will not be used.   seed is the seed for the random number generator.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"There is a working example based on Kepler- 9 in the examples folder,  just run Kepler-9.jl and it will print out the results and create the two O-C diagrams (one for each planet).  ","category":"page"},{"location":"#.-Function-Documentation","page":"Home","title":"4. Function Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"linear_error_prop\ntransit_epoch\nlinear_transit_time\nlinear_transit_times\nwls_nr\nfit_linear_ephemeris\nstatistics_fit\nget_nboot\nclassical_bootstrap\nfull_linear_ephemeris_analysis","category":"page"},{"location":"#LinearEphemeris.linear_error_prop","page":"Home","title":"LinearEphemeris.linear_error_prop","text":"linear_error_prop(eq, em, x)\n\npropagates error on x value as:\n\nsqrtmathrmeq^2 + (x  mathrmem)^2\n\nArguments:\n\neq::Float64: error on intercept (reference time Tref)\nem::Float64: error on slope (reference period Pref)\nx::Float64: value at which compute the error\n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.transit_epoch","page":"Home","title":"LinearEphemeris.transit_epoch","text":"transit_epoch(T0, Tref, Pref)\n\ncomputes the transit epoch (or transit number N) with respect to a linear ephemeris:\n\n    N =  mathrmround( (T_0mathrmlin - T_mathrmref)  P_mathrmref)  \n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.linear_transit_time","page":"Home","title":"LinearEphemeris.linear_transit_time","text":"linear_transit_time(Tref, Pref, epoch)\n\ncomputes the predicted transit time at specific epoch (transit number N) given a linear ephemeris:  \n\n    T_0mathrmlin N = T_mathrmref + N times P_mathrmref  \n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.linear_transit_times","page":"Home","title":"LinearEphemeris.linear_transit_times","text":"linear_transit_times(Tref, Pref, epochs)\n\nas linear_transit_time but for vector/list of epochs\n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.wls_nr","page":"Home","title":"LinearEphemeris.wls_nr","text":"wls_nr(x, y, ey)\n\nWEIGHTED LEAST SQUARE AS IN NUMERICAL RECIPES\n\nArguments:\n\nx::Vector{Float64}: independent variable  \ny::Vector{Float64}: dependent variable  \ney::Vector{Float64}: measurement errors on dependent variable\n\nReturns:\n\nintercept::tuple(fit::Float64, err::Float64): intercept with value (fit) and formal error (err)\nslope::tuple(fit::Float64, err::Float64): slope with value (fit) and formal error (err)\n\n\n\n\n\nwls_nr(x, y, ey)\n\nWEIGHTED LEAST SQUARE AS IN NUMERICAL RECIPES\n\nArguments:\n\nx::Vector{Float64}: independent variable  \ny::Vector{Float64}: dependent variable  \ney::Vector{Float64}: measurement errors on dependent variable\n\nReturns:\n\nintercept::tuple(fit::Float64, err::Float64): intercept with value (fit) and formal error (err)\nslope::tuple(fit::Float64, err::Float64): slope with value (fit) and formal error (err)\n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.fit_linear_ephemeris","page":"Home","title":"LinearEphemeris.fit_linear_ephemeris","text":"fit_linear_ephemeris(epochs, T0s, err_T0s)\n\nas in wls_nr but with meaningful variable names\n\nArguments:\n\nepochs::Vector{Float64}: transit epochs/numbers  \nT0s::Vector{Float64}: transit times  \nerr_T0s::Vector{Float64}: measurement errors on T0s\n\nReturns:\n\nTref::Tuple(fit::Float64, err::Float64): reference time of the linear ephemeris with value (fit) and formal error (err)\nPref::Tuple(fit::Float64, err::Float64): period of the linear ephemeris with value (fit) and formal error (err)\n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.statistics_fit","page":"Home","title":"LinearEphemeris.statistics_fit","text":"statistics_fit(y_obs, y_mod; ey_obs = nothing, n_fit = 2)\n\ncomputes some statistics on the fitted linear ephemeris\n\nArguments:\n\ny_obs::Vector{Float64} observed values (T0s)\ny_mod::Vector{Float64} model values (T0s,lin)\ney_obs::Vector{Float64} = nothing errors on the observed values (if available)\nn_fit::Int = 2 number of fitted parameters of the model (2 for the linear ephemeris)\n\nReturns:\n\nstats::NamedTuple: named tuple with various statistics based on the residuals\nstats.std::Float64 standard deviation of the residuals  \nstats.p68::Float64 68.27th percentile of the absolute residuals\nstats.chi_square::Float64 χ^2 like = ∑((obs - mod) / err_obs)^2\nstats.red_chi_square::Float64 χ^2 / dof\nstats.dof::Float64 degrees of freedom dof = n_data-n_fit\nstats.bic::Float64 BIC= χ^2 + n_fit ln(n_data)\nstats.aic::Float64 AIC= χ^2 + 2 n_fit\nstats.lnc::Float64 log-Likelihood constant part given by the 2π and σ_i terms\nstats.lnL::Float64 log-Likelihood\nstats.bic_lnL::Float64 BIC= -2lnL + n_fit ln(n_data)\nstats.aic_lnL::Float64 AIC= -2lnL + 2 n_fit\n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.get_nboot","page":"Home","title":"LinearEphemeris.get_nboot","text":"get_nboot(n)\n\nComputes the minimum proposed number of bootstrap iteration as:\n\n    n_mathrmboot = n times mathrmround(Int ln(n)^2)\n\nArguments:\n\nn::Int number of observed transit times (T0s)\n\nReturns:\n\nn_boot::Int number of bootstrap iterations\n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.classical_bootstrap","page":"Home","title":"LinearEphemeris.classical_bootstrap","text":"classical_bootstrap(\n    x,\n    y, \n    q, \n    m; \n    ey_in = nothing, \n    nboot = nothing, \n    rng=Random.GLOBAL_RNG,\n    return_distribution=true\n)\n\nArguments:\n\nx::Vector{Float64}: independent variable  \ny::Vector{Float64}: dependent variable  \nq::Float: intercept (the true or best-fit value)  \nm::Float: slope (the true or best-fit value)  \ney_in::Vector{Float64} = nothing: measurement errors on dependent variable (default is nothing)  \nnboot::Int = nothing: number of bootstrap iterations to run  \nrng = Random.GLOBAL_RNG: random number generator  \nreturn_distribution::Bool = true: return or not the bootstrap distribution of each parameter  \n\nReturn:\n\ntuple(median::Float64, rms=Float64, distribution=Vector{Float64}): intercept bootstrap (median, rms, distribution); return_distribution=false will set distribution=nothing  \ntuple(median::Float64, rms=Float64, distribution=Vector{Float64}): slop bootstrap\n\n\n\n\n\n","category":"function"},{"location":"#LinearEphemeris.full_linear_ephemeris_analysis","page":"Home","title":"LinearEphemeris.full_linear_ephemeris_analysis","text":"full_linear_ephemeris_analysis(\n    T0s,\n    err_T0s;\n    Tref_in = nothing,\n    Pref_in = nothing,\n    tscale = nothing,\n    sources = nothing,\n    bootstrap = true,\n    nboot = nothing,\n    return_distribution = true,\n    do_plot = true,\n    show_gui = true,\n    plot_file = nothing,\n    seed = 42,\n)\n\nCompute the full linear ephemeris with all needed arguments.   It prints the output on the standard output and do the plots if required.\n\nArguments:\n\nT0s::Vector{Float64}: observed transit times vector  \nerr_T0s::Vector{Float64}: measurement error vector on observed transit times  \nTref_in::Float64 = nothing: input reference time for the linear ephemeris  \nPref_in::Float64 = nothing: input reference period for the linear ephemeris  \ntscale::Float64 = nothing: scale time, just for plot  \nsources::Vector{String} = nothing: list/vector of sources of each transit time  \nbootstrap::Bool = true: run or not the bootstrap analysis  \nnboot::Int = nothing: number of bootstrap iterations if required  \nreturn_distribution = true: in case of bootstrap, return distribution (if also do_plot, it plots distribution)  \ndo_plot::Bool = true: do or not the plot  \nshow_gui::Bool = true: if do_plot, this flag open the GUI or not  \nplot_file::String = nothing: if do_plot, this is the full name of the output plot file  \nseed::Int = 42: seed of the random number  \n\nReturns:\n\nnothing\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"There are some more functions in the package, but I did not commented them because they are like sub-small pieces of others functions.  ","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
